{"version":3,"file":"mainMusic.js","sources":["store/module/mainMusic.js"],"sourcesContent":["import { defineStore } from 'pinia' \r\nimport { fetchBannerList, fetchSongMenu, fetchSongRecommend } from '@/service/module/mainMusic.js'\n\r\nconst useMusic = defineStore('music', {\r\n\tstate: () => {\r\n\t\treturn {\r\n\t\t\tbannerList: [],\r\n\t\t\trecommendSongs: [],\r\n\t\t\thotMenu: [],\r\n\t\t\tmenuInfo: {},\r\n\t\t\trecommendMenu: [],\r\n\t\t\trankingMenuList: [],\r\n\t\t\trankingSongs: [],\r\n\t\t\tcurrentPage: 'mainMusic'\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\t\tasync getBannerList() {\r\n\t\t\tconst res = await fetchBannerList()\r\n\t\t\tconst list = res.data.banners\r\n\t\t\tthis.bannerList = list.map((item) => item.pic)\r\n\t\t},\r\n\t\tgetRecommendSongs() {\r\n\t\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await fetchSongRecommend()\r\n\t\t\t\t\tthis.recommendSongs = res.data.playlist.tracks\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t    \r\n\t\t},\r\n\t\tasync getSongMenu() {\r\n\t\t\t// 热门歌单\r\n\t\t\tlet menu = await fetchSongMenu()\r\n\t\t\tthis.hotMenu = menu.data.playlists\r\n\t\t\tmenu = await fetchSongMenu('华语')\r\n\t\t\tthis.recommendMenu = menu.data.playlists\r\n\t\t},\r\n\t\tgetMenuInfo(id) {\r\n\t\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet res = await fetchSongRecommend(id)\r\n\t\t\t\t\tthis.menuInfo = res.data.playlist\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t})\r\n\t\t},\r\n\t\tasync getRankingList() {\r\n\t\t\tconst rankingMap = {\r\n\t\t\t\toriginRanking: 2884035,\r\n\t\t\t\tnewRanking:3779629,\r\n\t\t\t\tuperRanking: 19723756\r\n\t\t\t}\r\n\t\t\tfor(const key in rankingMap) {\r\n\t\t        const id = rankingMap[key]\r\n\t\t        const res = await fetchSongRecommend(id)\r\n\t\t\t\tthis.rankingMenuList.push(res.data.playlist)\r\n\t\t    }\r\n\t\t},\r\n\t\tgetRankingSongs(id) {\r\n\t\t\treturn new Promise(async (resolve, resject) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await fetchSongRecommend(id)\r\n\t\t\t\t\tthis.rankingSongs = res.data.playlist.tracks\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n})\r\nexport default useMusic"],"names":["defineStore","fetchBannerList","reject","fetchSongRecommend","fetchSongMenu"],"mappings":";;;AAGK,MAAC,WAAWA,cAAW,YAAC,SAAS;AAAA,EACrC,OAAO,MAAM;AACZ,WAAO;AAAA,MACN,YAAY,CAAE;AAAA,MACd,gBAAgB,CAAE;AAAA,MAClB,SAAS,CAAE;AAAA,MACX,UAAU,CAAE;AAAA,MACZ,eAAe,CAAE;AAAA,MACjB,iBAAiB,CAAE;AAAA,MACnB,cAAc,CAAE;AAAA,MAChB,aAAa;AAAA,IACb;AAAA,EACD;AAAA,EACD,SAAS;AAAA,IACR,MAAM,gBAAgB;AACrB,YAAM,MAAM,MAAMC,yCAAiB;AACnC,YAAM,OAAO,IAAI,KAAK;AACtB,WAAK,aAAa,KAAK,IAAI,CAAC,SAAS,KAAK,GAAG;AAAA,IAC7C;AAAA,IACD,oBAAoB;AACnB,aAAO,IAAI,QAAQ,OAAO,SAASC,YAAW;AAC7C,YAAI;AACH,gBAAM,MAAM,MAAMC,4CAAoB;AACtC,eAAK,iBAAiB,IAAI,KAAK,SAAS;AACxC,kBAAS;AAAA,QACT,SAAO,KAAK;AACZ,UAAAD,QAAO,GAAG;AAAA,QACV;AAAA,MACL,CAAI;AAAA,IAED;AAAA,IACD,MAAM,cAAc;AAEnB,UAAI,OAAO,MAAME,uCAAe;AAChC,WAAK,UAAU,KAAK,KAAK;AACzB,aAAO,MAAMA,yBAAa,cAAC,IAAI;AAC/B,WAAK,gBAAgB,KAAK,KAAK;AAAA,IAC/B;AAAA,IACD,YAAY,IAAI;AACf,aAAO,IAAI,QAAQ,OAAO,SAASF,YAAW;AAC7C,YAAI;AACH,cAAI,MAAM,MAAMC,yBAAkB,mBAAC,EAAE;AACrC,eAAK,WAAW,IAAI,KAAK;AACzB,kBAAS;AAAA,QACT,SAAO,KAAK;AACZ,UAAAD,QAAO,GAAG;AAAA,QACV;AAAA,MAEL,CAAI;AAAA,IACD;AAAA,IACD,MAAM,iBAAiB;AACtB,YAAM,aAAa;AAAA,QAClB,eAAe;AAAA,QACf,YAAW;AAAA,QACX,aAAa;AAAA,MACb;AACD,iBAAU,OAAO,YAAY;AACtB,cAAM,KAAK,WAAW,GAAG;AACzB,cAAM,MAAM,MAAMC,yBAAkB,mBAAC,EAAE;AAC7C,aAAK,gBAAgB,KAAK,IAAI,KAAK,QAAQ;AAAA,MACxC;AAAA,IACJ;AAAA,IACD,gBAAgB,IAAI;AACnB,aAAO,IAAI,QAAQ,OAAO,SAAS,YAAY;AAC9C,YAAI;AACH,gBAAM,MAAM,MAAMA,yBAAkB,mBAAC,EAAE;AACvC,eAAK,eAAe,IAAI,KAAK,SAAS;AACtC,kBAAS;AAAA,QACT,SAAO,KAAK;AACZ,iBAAO,GAAG;AAAA,QACV;AAAA,MACL,CAAI;AAAA,IACD;AAAA,EACD;AACF,CAAC;;"}